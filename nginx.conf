# nginxの設定ファイル
# ログを書き出すように設定しているので、競技終了後にはログを削除すること
# 書き直したら反映させるために既存のログを削除し、nginxを再起動すること
# sudo rm /var/log/nginx/access.log
# sudo systemctl restart nginx.service

# 初期からある設定---------------------
user www-data;
worker_processes auto;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;
include /etc/nginx/modules-enabled/*.conf;
# -----------------------------------

worker_rlimit_nofile 4096;  # workerが開けるファイル数の上限(worker_connectionsの4倍くらいにする)

events {
  worker_connections 1024;  # 各workerが同時に処理できる接続数
  accept_mutex_delay 100ms; # workerが接続を受け付けるまでの待ち時間(本来の値は500ms)
  # use epoll;  # Linuxの高性能なイベント通知インターフェイス
  # multi_accept on;  # 複数の接続を同時に受け付ける(エラーが出るかもしれないのでコメントアウト)
}

http {
	# ログの設定
  # TODO: 最後にOFFにする(access_log off以外はコメントアウト)
  # alpで解析するためにltsv形式で出力
  log_format ltsv "time:$time_local"
    "\thost:$remote_addr"
    "\tforwardedfor:$http_x_forwarded_for"
    "\treq:$request"
    "\tmethod:$request_method"
    "\turi:$request_uri"
    "\tstatus:$status"
    "\tsize:$body_bytes_sent"
    "\treferer:$http_referer"
    "\tua:$http_user_agent"
    "\treqtime:$request_time"
    "\truntime:$upstream_http_x_runtime"
    "\tapptime:$upstream_response_time"
    "\tcache:$upstream_http_x_cache"
    "\tvhost:$host";
  # access_log  /var/log/nginx/access.log ltsv; # アクセスログの出力先と形式を指定
  # error_log /var/log/nginx/error.log warn;  # エラーログのレベルをwarnに設定
  access_log off;  # アクセスログを出力しない

  # 基本設定
  sendfile on;  # 高速なファイル転送を有効にする。デフォルトはoff
  tcp_nopush on;  # TCPのNagleアルゴリズムを無効にする。デフォルトはoff
  tcp_nodelay on;  # 小さいパケットも即座に送信するようにする。デフォルトはoff
  types_hash_max_size 2048; # MIME型ハッシュの最大サイズを指定する。デフォルトは1024
  server_tokens off; # バージョン情報を隠す。デフォルトはon

	# ファイルキャッシュの設定
  open_file_cache max=10000 inactive=20s; # max:キャッシュの最大数、inactive:アクセスがないキャッシュの有効期間
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

	# Keepalive 設定
  keepalive_timeout 65; # 1つのコネクションを使いまわす時間
  keepalive_requests 500; # 1つのコネクションで処理するリクエストの最大数

  include /etc/nginx/mime.types; # 適切な Content-Type ヘッダをレスポンスに付与することができる
  default_type application/octet-stream; # 上記の設定にはないものが来た場合のデフォルトの Content-Type

	# SSLの設定
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1m;
  # SSLの暗号化アルゴリズムの設定
  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';

	# gzipの設定
  # TODO: CPUを使うのでOFFにするのも選択肢
  gzip on;  # gzip圧縮を有効にする
  gzip_comp_level 6;  # 圧縮レベルを6に設定
  gzip_proxied expired no-cache no-store private auth;
  gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}
